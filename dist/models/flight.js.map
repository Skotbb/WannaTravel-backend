{"version":3,"sources":["../../models/flight.js"],"names":["Schema","flightSchema","date","Date","best","price","Number","duration","String","cheapest","cityName","cityId","Types","ObjectId","searchUrl","dayOfWeek","tripDuration","plugin","statics","addFlight","flight","city","Flight","findOne","search","err","result","console","log","create","name","_id","save","thing","model"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;;;AAEA,IAAIA,SAAS,mBAASA,MAAtB;;AAEA,IAAMC,eAAe,IAAID,MAAJ,CAAW;AAC/BE,OAAMC,IADyB;AAE/BC,OAAM;AACLC,SAAOC,MADF;AAELC,YAAUC;AAFL,EAFyB;AAM/BC,WAAU;AACTJ,SAAOC,MADE;AAETC,YAAUC;AAFD,EANqB;AAU/BE,WAAUF,MAVqB;AAW/BG,SAAQX,OAAOY,KAAP,CAAaC,QAXU;AAY/BC,YAAWN,MAZoB;AAa/BO,YAAWP,MAboB;AAc/BQ,eAAcV;AAdiB,CAAX,CAArB;AAgBAL,aAAagB,MAAb;;AAEAhB,aAAaiB,OAAb,CAAqBC,SAArB;AAAA,sDAAiC,kBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,wCACzBC,OAAOC,OAAP,CAAe,EAACT,WAAWM,OAAOI,MAAnB,EAAf;AAAA,6DAA2C,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AACjDC,oBAAQC,GAAR,CAAY,cAAZ;AACA;;AAFiD,gBAG5CH,GAH4C;AAAA;AAAA;AAAA;;AAAA,gBAK3CC,MAL2C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOzCJ,OAAOO,MAAP,CAAc,EAAc;AACjCb,2BAAcI,OAAOJ,YADF;AAEnBD,wBAAWK,OAAOL,SAFC;AAGnBL,uBAAUW,KAAKS,IAAL,IAAa,IAHJ;AAInBnB,qBAAQU,KAAKU,GAAL,IAAY,IAJD;AAKnB7B,mBAAMkB,OAAOlB,IALM;AAMnBE,mBAAMgB,OAAOhB,IANM;AAOnBK,uBAAUW,OAAOX,QAPE;AAQnBK,wBAAWM,OAAOI;AARC,aAAd,EASH,UAASC,GAAT,EAAcL,MAAd,EAAqB;AACvB,iBAAIK,GAAJ,EAAS;AACR,oBAAMA,GAAN;AACA,cAFD,MAEO;AACNE,sBAAQC,GAAR,CAAY,cAAZ;AACA,qBAAOR,MAAP;AACA;AACD,aAhBK,CAPyC;;AAAA;AAAA;AAAA;;AAAA;AAAA,kBA2B3CM,OAAOtB,IAAP,KAAgBgB,OAAOhB,IAAvB,IAA+BsB,OAAOjB,QAAP,KAAoBW,OAAOX,QA3Bf;AAAA;AAAA;AAAA;;AA4B9CkB,oBAAQC,GAAR,uBAAgCF,OAAOtB,IAAP,CAAYC,KAA5C,qBAAiEe,OAAOhB,IAAP,CAAYC,KAA7E;AACAsB,oBAAQC,GAAR,2BAAoCF,OAAOjB,QAAP,CAAgBJ,KAApD,qBAAyEe,OAAOX,QAAP,CAAgBJ,KAAzF;AACAqB,mBAAOtB,IAAP,GAAcgB,OAAOhB,IAArB;AACAsB,mBAAOjB,QAAP,GAAkBW,OAAOX,QAAzB;AACA;AACAiB,mBAAOM,IAAP,CAAY,UAACP,GAAD,EAAMQ,KAAN,EAAgB;AAC3B,iBAAIR,GAAJ,EAAS;AACR,oBAAMA,GAAN;AACA;AACDE,qBAAQC,GAAR,0BAAmCP,KAAKS,IAAxC;AACA,aALD;AAjC8C,6CAuCvCJ,MAvCuC;;AAAA;AAyC9CC,oBAAQC,GAAR,CAAY,eAAZ;AAzC8C,6CA0CvCF,MA1CuC;;AAAA;AAAA;AAAA;;AAAA;AA8ChDC,oBAAQC,GAAR,CAAYH,GAAZ;;AA9CgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3C;;AAAA;AAAA;AAAA;AAAA,UADyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAjC;;AAAA;AAAA;AAAA;AAAA;;AAoDA,IAAIH,SAAS,mBAASY,KAAT,CAAe,SAAf,EAA0BjC,YAA1B,CAAb;QACQqB,M,GAAAA,M","file":"flight.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport findOrCreate from 'mongoose-findorcreate'\r\n\r\nlet Schema = mongoose.Schema;\r\n\r\nconst flightSchema = new Schema({\r\n\tdate: Date,\r\n\tbest: {\r\n\t\tprice: Number,\r\n\t\tduration: String\r\n\t},\r\n\tcheapest: {\r\n\t\tprice: Number,\r\n\t\tduration: String\r\n\t},\r\n\tcityName: String,\r\n\tcityId: Schema.Types.ObjectId,\r\n\tsearchUrl: String,\r\n\tdayOfWeek: String,\r\n\ttripDuration: Number,\r\n});\r\nflightSchema.plugin(findOrCreate)\r\n\r\nflightSchema.statics.addFlight = async (flight, city) => {\r\n\treturn Flight.findOne({searchUrl: flight.search}, async (err, result) => {\r\n\t\tconsole.log('Searching db')\r\n\t\t// If no error.\r\n\t\tif (!err) {\r\n\t\t\t// If no results\r\n\t\t\tif (!result) {\r\n\t\t\t\t// add flight\r\n\t\t\t\tawait Flight.create({             // Add flight to db and return it\r\n\t\t\t\t\ttripDuration: flight.tripDuration,\r\n\t\t\t\t\tdayOfWeek: flight.dayOfWeek,\r\n\t\t\t\t\tcityName: city.name || null,\r\n\t\t\t\t\tcityId: city._id || null,\r\n\t\t\t\t\tdate: flight.date,\r\n\t\t\t\t\tbest: flight.best,\r\n\t\t\t\t\tcheapest: flight.cheapest,\r\n\t\t\t\t\tsearchUrl: flight.search\r\n\t\t\t\t}, function(err, flight){\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tthrow err\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(\"Flight added\")\r\n\t\t\t\t\t\treturn flight\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t//Flight is in db\r\n\t\t\t\t// Check if the prices are the same\r\n\t\t\t\tif (result.best !== flight.best || result.cheapest !== flight.cheapest) {\r\n\t\t\t\t\tconsole.log(`Best flight was $${result.best.price} and is now $${flight.best.price}`)\r\n\t\t\t\t\tconsole.log(`Cheapest flight was $${result.cheapest.price} and is now $${flight.cheapest.price}`)\r\n\t\t\t\t\tresult.best = flight.best\r\n\t\t\t\t\tresult.cheapest = flight.cheapest\r\n\t\t\t\t\t//save\r\n\t\t\t\t\tresult.save((err, thing) => {\r\n\t\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\t\tthrow err\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconsole.log(`Flights updated for ${city.name}`)\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn result\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"Flight in db.\")\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nlet Flight = mongoose.model('Flights', flightSchema);\r\nexport {Flight}"]}