{"version":3,"sources":["../../models/city.js"],"names":["Schema","citySchema","name","type","String","index","unique","flights","Array","countryId","Types","ObjectId","searchUrl","plugin","statics","addCity","city","country","City","findOne","err","result","console","log","create","search","_id","model"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;AAEA,IAAIA,SAAS,mBAASA,MAAtB;;AAEA,IAAMC,aAAa,IAAID,MAAJ,CAAW;AAC7BE,OAAM,EAACC,MAAMC,MAAP,EAAeC,OAAO,IAAtB,EAA4BC,QAAQ,IAApC,EADuB;AAE7BC,UAASC,KAFoB;AAG7BC,YAAWT,OAAOU,KAAP,CAAaC,QAHK;AAI7BC,YAAWR;AAJkB,CAAX,CAAnB;AAMAH,WAAWY,MAAX;;AAIAZ,WAAWa,OAAX,CAAmBC,OAAnB,GAA6B,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC/C,QAAOC,KAAKC,OAAL,CAAa,EAACjB,MAAMc,KAAKd,IAAZ,EAAb,EAAgC,UAACkB,GAAD,EAAMC,MAAN,EAAiB;AACvDC,UAAQC,GAAR,CAAY,UAAZ;AACA;AACA,MAAI,CAACH,GAAL,EAAU;AACT;AACA,OAAI,CAACC,MAAL,EAAa;AACZ;AACAC,YAAQC,GAAR,CAAY,kBAAZ;AACA,WAAOL,KAAKM,MAAL,CAAY;AAClBtB,WAAMc,KAAKd,IADO;AAElBU,gBAAWI,KAAKS,MAFE;AAGlBhB,gBAAWQ,QAAQS,GAAR,IAAe;AAHR,KAAZ,EAIJ,UAASN,GAAT,EAAcJ,IAAd,EAAoB;AACtB,SAAGI,GAAH,EAAQ;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACA,MAFD,MAEO;AACNE,cAAQC,GAAR,CAAeP,KAAKd,IAApB;AACA,aAAOc,IAAP;AACA;AACD,KAXM,CAAP;AAYA,IAfD,MAeO;AACNM,YAAQC,GAAR,CAAY,aAAZ;AACA,WAAOF,MAAP;AACA;AACD,GArBD,MAqBO;AACNC,WAAQC,GAAR,CAAYH,GAAZ;AACA;AACD,EA3BM,CAAP;AA4BA,CA7BD;;AA+BA,IAAIF,OAAO,mBAASS,KAAT,CAAe,QAAf,EAAyB1B,UAAzB,CAAX;QACSiB,I,GAAAA,I","file":"city.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport findOrCreate from 'mongoose-findorcreate'\r\nimport { databaseName } from '../travel-settings'\r\n\r\n// mongoose.connect(`mongodb://localhost/${databaseName}`)\r\n\r\nlet Schema = mongoose.Schema;\r\n\r\nconst citySchema = new Schema({\r\n\tname: {type: String, index: true, unique: true},\r\n\tflights: Array,\r\n\tcountryId: Schema.Types.ObjectId,\r\n\tsearchUrl: String,\r\n});\r\ncitySchema.plugin(findOrCreate)\r\n\r\n\r\n\r\ncitySchema.statics.addCity = (city, country) => {\r\n\treturn City.findOne({name: city.name}, (err, result) => {\r\n\t\tconsole.log(\"Finding.\")\r\n\t\t// If no error\r\n\t\tif (!err) {\r\n\t\t\t// If no result\r\n\t\t\tif (!result) {\r\n\t\t\t\t// Create the city!\r\n\t\t\t\tconsole.log(\"Create new city.\")\r\n\t\t\t\treturn City.create({\r\n\t\t\t\t\tname: city.name,\r\n\t\t\t\t\tsearchUrl: city.search,\r\n\t\t\t\t\tcountryId: country._id || null\r\n\t\t\t\t}, function(err, city) {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\tconsole.log(err)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconsole.log(`${city.name} created.`)\r\n\t\t\t\t\t\treturn city\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"City in db.\")\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t})\r\n}\r\n\r\nlet City = mongoose.model('Cities', citySchema);\r\nexport { City }"]}