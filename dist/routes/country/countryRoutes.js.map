{"version":3,"sources":["../../../routes/country/countryRoutes.js"],"names":["express","require","_","Horseman","parsingManager","settings","router","Router","get","req","res","next","socket","setTimeout","addListener","destroy","dates","horseman","timeout","console","log","pageTitle","countries","countriesILike","on","msg","open","dep","ret","title","then","waitForSelector","click","screenshot","evaluate","$","each","children","name","find","text","searchHref","attr","country","search","indexOf","push","results","length","findOrCreate","searchUrl","err","createdCountry","created","e","render","message","catch","error","close","module","exports"],"mappings":"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","file":"countryRoutes.js","sourcesContent":["let express = require('express');\r\nconst _ = require('lodash')\r\n//const mongoose = require('mongoose')\r\nimport { getUrl, getTravelDates } from '../../public/javascripts/utils'\r\nlet Horseman = require('node-horseman')\r\nlet parsingManager = require('../../public/javascripts/parsingManager')\r\nlet settings =  require('../../travel-settings')\r\n\r\n//Models\r\nimport { Country } from '../../models/country'\r\nimport { City } from '../../models/city'\r\nimport { Flight } from '../../models/flight'\r\n\r\nlet router = express.Router();\r\n\r\n/* GET selections from form. */\r\nrouter.get('/get', function(req, res, next) {\r\n\treq.socket.setTimeout(5 * 60 * 1000)\r\n\treq.socket.addListener('timeout', function() {\r\n\t\treq.socket.destroy()\r\n\t})\r\n\r\n\ttry {\r\n\t\t// Get form variables\r\n\r\n\t\tvar dates = getTravelDates()\r\n\t\tvar horseman = new Horseman({timeout: 10000})\r\n\t\tconsole.log(\"Horseman created\")\r\n\t\t// Variables from page\r\n\t\tvar pageTitle = ''\r\n\t\tvar countries = []\r\n\t\tvar countriesILike = settings.countriesILike\r\n\t\thorseman\r\n\t\t\t.on(\"consoleMessage\", function(msg){\r\n\t\t\t\tconsole.log(msg);\r\n\t\t\t})\r\n\t\t\t.open(getUrl(dates.dep, dates.ret))\r\n\t\t\t.title()\r\n\t\t\t.then(function (title) {\r\n\t\t\t\tconsole.log(\"Open\")\r\n\t\t\t\tpageTitle = title\r\n\t\t\t\tconsole.log(title)\r\n\t\t\t\t//res.render('results', {title: title, message: \"Momondo?\"});\r\n\t\t\t})\r\n\t\t\t.waitForSelector('div.ng-scope > div > div.flexiblesearch-option-content > label:nth-child(2) > div > span')\r\n\t\t\t.click('div.ng-scope > div > div.flexiblesearch-option-content > label:nth-child(2) > div > span')\r\n\t\t\t.log(\"Sorting by most popular\")\r\n\t\t\t.waitForSelector('div.flexiblesearch-main.ng-scope > div:nth-child(2) > div > div.ng-scope > div:nth-child(1) > span:nth-child(1) > div > div > a > span.flexiblesearch-result-button.ng-scope')\r\n\t\t\t.screenshot(\"screen.png\")\r\n\t\t\t.evaluate(function(countriesILike) {\r\n\t\t\t\tvar countries = []\r\n\t\t\t\t// console.log(\"In page.\")\r\n\t\t\t\tconsole.log(countriesILike)\r\n\r\n\t\t\t\t$('div.mui-goexplore-result-row.ng-scope')\r\n\t\t\t\t\t.each(function() {\r\n\t\t\t\t\t\t$(this).children()\r\n\t\t\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\t\t\tvar name = $(this).find('div > div.container > a > span.city.ng-binding').text()\r\n\t\t\t\t\t\t\t\tvar searchHref = $(this).find('div > div.container > a').attr('href')\r\n\t\t\t\t\t\t\t\t// console.log(name)\r\n\t\t\t\t\t\t\t\tvar country = {\r\n\t\t\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t\t\t\tsearch: 'http://www.momondo.com' + searchHref\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(_.indexOf(countriesILike, country.name) !== -1) {\r\n\t\t\t\t\t\t\t\t\tcountries.push(country)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\treturn countries\r\n\t\t\t}, countriesILike)\r\n\t\t\t.then(async function (results) {\r\n\t\t\t\tconsole.log(`Checking ${results.length} countries.`)\r\n\t\t\t\tcountries = results\r\n\r\n\t\t\t\tfor(let country of countries) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tCountry.findOrCreate({name: country.name}, {searchUrl: country.search},\r\n\t\t\t\t\t\t\tfunction(err, createdCountry, created) {\r\n\t\t\t\t\t\t\t\tif(created){\r\n\t\t\t\t\t\t\t\t\tconsole.log(`${createdCountry.name} was added to db.`)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tconsole.log(e)\r\n\t\t\t\t\t\tres.render('results', {title: \"Oops!\", message: \"Something went wrong! \"+e})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//countries = await parsingManager.parseCountry(countries)\r\n\t\t\t\tconsole.log(\"Finished.\")\r\n\t\t\t\tres.render('results', {title: pageTitle, message: \"Added countries to database!\"})\r\n\t\t\t})\r\n\t\t\t.catch(function(error) {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t})\r\n\t\t\t.log(\"Closing.\")\r\n\t\t\t.close()\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\tres.render('results', {title: \"Oops!\", message: e})\r\n\t}\r\n});\r\n\r\n\r\nmodule.exports = router;\r\n"]}